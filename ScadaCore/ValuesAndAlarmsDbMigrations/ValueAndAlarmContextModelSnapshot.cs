// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScadaCore.Data;

#nullable disable

namespace ScadaCore.ValuesAndAlarmsDbMigrations
{
    [DbContext(typeof(ValueAndAlarmContext))]
    partial class ValueAndAlarmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScadaCore.Models.Alarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnalogInputTagName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Threshold")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("ValueName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("AnalogInputTagName");

                    b.ToTable("Alarm");
                });

            modelBuilder.Entity("ScadaCore.Models.AlarmLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlarmId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlarmId");

                    b.ToTable("AlarmLogs");
                });

            modelBuilder.Entity("ScadaCore.Models.Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("InputOutputAddress")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Tag");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ScadaCore.Models.TagLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TagName");

                    b.ToTable("TagLogs");
                });

            modelBuilder.Entity("ScadaCore.Models.InputTag", b =>
                {
                    b.HasBaseType("ScadaCore.Models.Tag");

                    b.Property<string>("Driver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsScanned")
                        .HasColumnType("bit");

                    b.Property<int>("ScanTime")
                        .HasColumnType("int");

                    b.ToTable("InputTags", (string)null);
                });

            modelBuilder.Entity("ScadaCore.Models.OutputTag", b =>
                {
                    b.HasBaseType("ScadaCore.Models.Tag");

                    b.Property<int>("InitialValue")
                        .HasColumnType("int");

                    b.ToTable("OutputTags", (string)null);
                });

            modelBuilder.Entity("ScadaCore.Models.AnalogInputTag", b =>
                {
                    b.HasBaseType("ScadaCore.Models.InputTag");

                    b.Property<int>("HighLimit")
                        .HasColumnType("int");

                    b.Property<int>("LowLimit")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AnalogInputTags", (string)null);
                });

            modelBuilder.Entity("ScadaCore.Models.DigitalInputTag", b =>
                {
                    b.HasBaseType("ScadaCore.Models.InputTag");

                    b.ToTable("DigitalInputTags", (string)null);
                });

            modelBuilder.Entity("ScadaCore.Models.AnalogOutputTag", b =>
                {
                    b.HasBaseType("ScadaCore.Models.OutputTag");

                    b.Property<int>("HighLimit")
                        .HasColumnType("int");

                    b.Property<int>("LowLimit")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AnalogOutputTags", (string)null);
                });

            modelBuilder.Entity("ScadaCore.Models.DigitalOutputTag", b =>
                {
                    b.HasBaseType("ScadaCore.Models.OutputTag");

                    b.ToTable("DigitalOutputTags", (string)null);
                });

            modelBuilder.Entity("ScadaCore.Models.Alarm", b =>
                {
                    b.HasOne("ScadaCore.Models.AnalogInputTag", null)
                        .WithMany("Alarms")
                        .HasForeignKey("AnalogInputTagName");
                });

            modelBuilder.Entity("ScadaCore.Models.AlarmLog", b =>
                {
                    b.HasOne("ScadaCore.Models.Alarm", "Alarm")
                        .WithMany()
                        .HasForeignKey("AlarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alarm");
                });

            modelBuilder.Entity("ScadaCore.Models.TagLog", b =>
                {
                    b.HasOne("ScadaCore.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ScadaCore.Models.InputTag", b =>
                {
                    b.HasOne("ScadaCore.Models.Tag", null)
                        .WithOne()
                        .HasForeignKey("ScadaCore.Models.InputTag", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScadaCore.Models.OutputTag", b =>
                {
                    b.HasOne("ScadaCore.Models.Tag", null)
                        .WithOne()
                        .HasForeignKey("ScadaCore.Models.OutputTag", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScadaCore.Models.AnalogInputTag", b =>
                {
                    b.HasOne("ScadaCore.Models.InputTag", null)
                        .WithOne()
                        .HasForeignKey("ScadaCore.Models.AnalogInputTag", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScadaCore.Models.DigitalInputTag", b =>
                {
                    b.HasOne("ScadaCore.Models.InputTag", null)
                        .WithOne()
                        .HasForeignKey("ScadaCore.Models.DigitalInputTag", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScadaCore.Models.AnalogOutputTag", b =>
                {
                    b.HasOne("ScadaCore.Models.OutputTag", null)
                        .WithOne()
                        .HasForeignKey("ScadaCore.Models.AnalogOutputTag", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScadaCore.Models.DigitalOutputTag", b =>
                {
                    b.HasOne("ScadaCore.Models.OutputTag", null)
                        .WithOne()
                        .HasForeignKey("ScadaCore.Models.DigitalOutputTag", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScadaCore.Models.AnalogInputTag", b =>
                {
                    b.Navigation("Alarms");
                });
#pragma warning restore 612, 618
        }
    }
}
